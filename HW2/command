jq -R 'inputs | [splits(", *")] as $row | {(input_filename): { ($row[3]): $row[:3] }}' file3 >> file4
cat filename | jq type
jq --slurp --raw-input --raw-output 'split("\n\r") | .[1:] | map(split(",")) |map({"username": .[0],"password": .[1], "shell": .[2], "groups": .[3]})' file2 > tempfile
jq --slurp --raw-input --raw-output 'split("\n") | .[1:] | map(split(",")) |map({"username": .[0],"password": .[1], "shell": .[2], "groups": .[3]})' | sed "s/$(printf '\r')\$//" file2 > tempfile
jq --slurp --raw-input --raw-output 'split("\n") | .[1:] | map(split(",")) |map({"username": .[0],"password": .[1], "shell": .[2], "groups": .[3]})' file2 > tempfile && cat tempfile | sed 's/\\r//g' > sample && rm tempfile
sudo pw useradd user2 g wheel -s /usr/local/bin/bash
pw usermod user1 -G wheel,www-data
sudo pw usermod user1 -p '12346'
echo "newpassword" | pw usermod -n username -h 0
cat file2 | head -2 | tail +2|  awk -F, '{print $4}'
awk 'END { print NR }' file2

jq --slurp --raw-input --raw-output 'split("\n") | .[1:] | map(split(",")) |map({"username": .[0],"password": .[1], "shell": .[2], "groups": .[3]})' file2 > tempfile.json && cat tempfile.json | sed 's/\\r//g' > sample.json && rm tempfile.json
cat file2 | grep -Ev '^[[:space:]]*(#|$)' > file2_b
jq '.issues[] | [.key , .fields.status.name , .fields.fixVersions[].name] | join(",")'

# https://unix.stackexchange.com/questions/327113/create-a-user-in-linux-and-freebsd-in-a-non-interactive-way
# https://askubuntu.com/questions/136481/how-to-change-password-using-usermod
# https://forums.freebsd.org/threads/script-pw-to-change-a-user-account-password.69826/
https://stackoverflow.com/questions/70963091/how-to-join-array-elements-with-jq
https://mozillazg.com/2018/01/jq-use-examples-cookbook.html
https://stackoverflow.com/questions/29073210/how-to-check-if-a-group-exists-and-add-if-it-doesnt-in-linux-shell-script
https://gist.github.com/CMCDragonkai/a35584049c44d459440e