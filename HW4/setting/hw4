#!/bin/sh

# PROVIDE: hw4
# REQUIRE: NETWORKING
# KEYWORD: shutdown

. /etc/rc.subr

name="hw4"
rcvar="hw4_enable"
command="/usr/local/bin/poetry"
pidfile="/var/run/${name}.pid"
logfile="/var/log/${name}.log"
start_cmd="hw4_start"
stop_cmd="hw4_stop"
restart_cmd="hw4_restart"
status_cmd="hw4_status"
# command_interpreter="/usr/local/bin/python3.9"


hw4_start()
{
    echo "Starting ${name}."
    str1=`cat /etc/rc.conf | grep NUM_DISKS`
    str2=`cat /root/web/.env | grep NUM_DISKS`
    sed "s/${str2}/${str1}/g" /root/web/.env > /root/web/tmp.out
    cat /root/web/tmp.out > /root/web/.env

    str1=`cat /etc/rc.conf | grep MAX_SIZE`
    str2=`cat /root/web/.env | grep MAX_SIZE`
    sed "s/${str2}/${str1}/g" /root/web/.env > /root/web/tmp.out
    cat /root/web/tmp.out > /root/web/.env

    sleep 1
    rm /root/web/tmp.out
    cd /root/web/api
    su root -c '/usr/local/bin/poetry run uvicorn app:APP --reload --host 0.0.0.0' >${logfile} 2>&1 &
    sleep 1
    cat ${logfile} | grep "reloader process" | awk '{print $5}' | cut -d '[' -f2 | cut -d ']' -f1 > ${pidfile}

}

hw4_stop()
{
    echo "Stopping ${name}."
    kill `cat ${pidfile}`
    rm ${pidfile}
    rm ${logfile}
    rm -r /var/raid/*
    rm -r /tmp/filename_list
}

hw4_restart()
{
    hw4_stop
    sleep 1
    hw4_start
}

hw4_status()
{
    if [ -f "${pidfile}" ]; then
        pid=$(cat ${pidfile})
        if [ -n "$(pgrep -F ${pidfile})" ]; then
            echo "${name} is running as pid ${pid}."
        else
            echo "${name} is not running."
        fi
    else
        echo "${name} is not running."
    fi
}

load_rc_config $name
run_rc_command "$1"
